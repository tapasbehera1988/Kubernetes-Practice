# Q1. In the following YAML configuration for a Deployment, what is the meaning of restartPolicy: Always in the container spec?

apiVersion: apps/v1
kind: Deployment
metadata:
 name: restart-policy-demo
spec:
 replicas: 3
 selector:
 matchLabels:
 app: restart-demo
 template:
 metadata:
 labels:
 app: restart-demo
 spec:
 containers:
 - name: nginx
 image: nginx
 restartPolicy: Always

A) The container will always be restarted if it fails.
B) The container will only restart on failure.
C) The container will never restart.
D) The restart policy is invalid in this context.
ANS- A

Q2. Which admission controllers in K8s is responsible for modifying the requests to ensure the required imagePullPolicy is applied?
Ans- ValidatingAdmissionWebhook

Q3.What is a ReplicaSet in Kubernetes?
A. A group of pods that are managed as a single unit
B. A mechanism to ensure high availability of pods
C. A way to define the desired state for a pod or a group of pods
D. A method to scale the number of pods in a deployment
Ans- D

Q4- What will happen if the following NetworkPolicy is applied in a namespace?

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
 name: deny-all
 namespace: default
spec:
 podSelector: {}
 policyTypes:
 - Ingress
 - Egress

A) All ingress and egress traffic will be allowed.
B) All ingress and egress traffic will be denied.
C) Only ingress traffic will be denied, egress traffic will be allowed.
D) Only egress traffic will be denied, ingress traffic will be allowed.
Ans- B
Q5- Which object is used to create a gateway for inbound traffic to your cluster?
Ans- Ingress

Q6- Q. What is the role of the tolerations field in the following Pod specification, and what does it allow?

apiVersion: v1
kind: Pod
metadata:
 name: nginx
spec:
 containers:
 - image: nginx
 name: nginx
 tolerations:
 - key: "key1"
 operator: "Equal"
 value: "value1"
 effect: "NoSchedule"

A) It ensures the pod is scheduled only on nodes with matching taints.
B) It allows the pod to be scheduled on nodes with specific taints.
C) It prevents the pod from being evicted from nodes with specific taints.
D) It forces the pod to be scheduled on a specific node.
Ans- A

Q7- Q. What is the purpose of the readinessProbe?
A) To check if the container is alive
B) To check if the container is ready to accept traffic
C) To define environment variables for the container
D) To set resource limits for the container
Ans- B

Q8- Q. In the following YAML file, what does the affinity section specify?

apiVersion: v1
kind: Pod
metadata:
 name: pod-affinity-demo
spec:
 containers:
 - name: nginx
 image: nginx
 affinity:
 podAffinity:
 requiredDuringSchedulingIgnoredDuringExecution:
 - labelSelector:
 matchExpressions:
 - key: app
 operator: In
 values:
 - store
 topologyKey: "kubernetes.io/hostname"

A) It ensures the pod is scheduled on a specific node.
B) It ensures the pod is scheduled on the same node as other pods with the label app: store.
C) It specifies the resource limits for the pod.
D) It sets the environment variables for the pod.
Ans- B

Q9- Q. In the following YAML file for a StatefulSet, what is the purpose of the volumeClaimTemplates section?

apiVersion: apps/v1
kind: StatefulSet
metadata:
 name: web
spec:
 serviceName: "nginx"
 replicas: 3
 selector:
 matchLabels:
 app: nginx
 template:
 metadata:
 labels:
 app: nginx
 spec:
 containers:
 - name: nginx
 image: nginx:1.14.2
 volumeMounts:
 - name: www
 mountPath: /usr/share/nginx/html
 volumeClaimTemplates:
 - metadata:
 name: www
 spec:
 accessModes: [ "ReadWriteOnce" ]
 resources:
 requests:
 storage: 1Gi

A) It specifies the volumes to be mounted in the containers.
B) It defines the PersistentVolumeClaims for dynamic provisioning of storage.
C) It sets the labels for the StatefulSet.
D) It configures the replicas for the StatefulSet.
Ans- B

Q10- Which component is responsible for assigning the nodes to pod as per resource availability?
Ans- Scheduler

Q11- Q. Which command can you use to see the history of changes made to a deployment named api-deployment?

A) kubectl history deployment/api-deployment
B) kubectl rollout history deployment/api-deployment
C) kubectl get history deployment/api-deployment
D) kubectl describe history deployment/api-deployment
Ans- C
Q12- Which of the following runs on each node and ensures containers are running on the pod?
Ans- Kubelet

Q13- Q. Which command would you use to create a secret from literal values in Kubernetes?

A) kubectl create secret generic my-secret --from-literal=username=admin --from-literal=password=1234
B) kubectl create secret docker-registry my-secret --from-literal=username=admin --from-literal=password=1234
C) kubectl create configmap my-secret --from-literal=username=admin --from-literal=password=1234
D) kubectl create secret literal my-secret username=admin password=1234
Ans- A
Q14- Q. In the following YAML file, what is the purpose of the lifecycle section for the container?

apiVersion: v1
kind: Pod
metadata:
 name: lifecycle-demo
spec:
 containers:
 - name: lifecycle-demo-container
 image: nginx
 lifecycle:
 preStop:
 exec:
 command: ["/bin/sh", "-c", "echo Goodbye, World!"]

A) To define environment variables for the container
B) To execute a command before the container starts
C) To define actions to be taken when the container is terminated
D) To specify the resource limits for the container
Ans- C
Q15- Q. What does the nodeSelector field in the following YAML configuration do?

apiVersion: v1
kind: Pod
metadata:
 name: node-selector-demo
spec:
 containers:
 - name: busybox
 image: busybox
 command: ["sh", "-c", "sleep 3600"]
 nodeSelector:
 disktype: ssd

A) It defines the volume mounts for the container
B) It schedules the pod on nodes with a specific label
C) It sets the resource requests for the container
D) It assigns a specific IP address to the pod
Ans- B
Q16- Q. In the following YAML snippet for an Ingress resource, what is the purpose of the pathType field?

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
 name: ingress-demo
spec:
 rules:
 - host: example.com
 http:
 paths:
 - path: /test
 pathType: Prefix
 backend:
 service:
 name: test-service
 port:
 number: 80

A) It specifies the type of backend service.
B) It defines how the path matching should be interpreted.
C) It sets the HTTP method for the Ingress rule.
D) It determines the SSL/TLS configuration for the Ingress.
Ans- B
Q17- Q. Which command would you use to set an environment variable named ENV_VAR to value in a deployment called my-deployment?

A) kubectl set env deployment/my-deployment ENV_VAR=value
B) kubectl update env deployment/my-deployment ENV_VAR=value
C) kubectl add env deployment my-deployment ENV_VAR=value
D) kubectl config env deployment/my-deployment ENV_VAR=value
Ans- A
Q18- Q. In the following YAML configuration for a ConfigMap, what is the key used to store the configuration data?

apiVersion: v1
kind: ConfigMap
metadata:
 name: game-config
data:
 game.properties: |
 enemies=aliens
 lives=3

Ans- game.properties
Q19- How can Kubernetes assist non-native applications in connecting to backend Pods?
 A) By exposing Pod IP addresses directly
 B) By providing EndpointSlices for each Service
 C) By offering manual configuration of network ports
 D) By offering service discovery mechanisms
Ans- D
Q20- Based on what do Networkpolicy resources select pods to define and apply rules?
Ans- Labels , Pod names , Namespaces
Q20- Q. In the following YAML configuration for a Deployment, what is the meaning of restartPolicy: Always in the container spec?

apiVersion: apps/v1
kind: Deployment
metadata:
 name: restart-policy-demo
spec:
 replicas: 3
 selector:
 matchLabels:
 app: restart-demo
 template:
 metadata:
 labels:
 app: restart-demo
 spec:
 containers:
 - name: nginx
 image: nginx
 restartPolicy: Always

A) The container will always be restarted if it fails.
B) The container will only restart on failure.
C) The container will never restart.
D) The restart policy is invalid in this context.
Ans- A
